---
- name: Perform post-install configuration
  hosts: all
  gather_facts: true
  become: true

  tasks:
    - name: Create net rules for eth0
      template:
        src: ../templates/70-persistent-net.rules
        dest: /etc/udev/rules.d/70-persistent-net.rules
        owner: root
        group: root
        mode: 0644

    - name: Find netplan files
      find:
        paths: /etc/netplan/
      register: netplan_files
      changed_when: False

    - name: Replace ens4 with eth0 in 50-cloud-init.yaml
      replace:
        path: /etc/netplan/50-cloud-init.yaml
        regexp: "ens4"
        replace: "eth0"
      when: netplan_files.files

    - name: Enable IP forwarding
      replace:
        path: /etc/sysctl.conf
        regexp: "#?net.ipv4.ip_forward=.*"
        replace: "net.ipv4.ip_forward=1"

    - name: NAT outbound connections
      ansible.builtin.iptables:
        table: nat
        chain: POSTROUTING
        source: 10.199.199.0/24
        out_interface: pnet0
        jump: MASQUERADE

    - name: Save iptables state to file
      community.general.iptables_state:
        state: saved
        path: /etc/iptables.rules

    - name: Copy iptables_pre_up.sh file
      copy:
        src: "../scripts/iptables_pre_up.sh"
        dest: /etc/network/if-pre-up.d/iptables
        owner: root
        group: root
        mode: 0774

    - name: Copy iptables_post_down.sh file
      copy:
        src: "../scripts/iptables_post_down.sh"
        dest: /etc/network/if-post-down.d/iptables
        owner: root
        group: root
        mode: 0774

    - name: Copy over interfaces file
      synchronize:
        src: "../templates/interfaces"
        dest: /etc/network/interfaces

    - name: Prevent linux-image-gcp from being upgraded
      ansible.builtin.dpkg_selections:
        name: linux-image-gcp
        selection: hold

    - name: Find boot files
      find:
        paths: /boot
        patterns: vmlinuz-*gcp
      register: move_files
      changed_when: False

    - name: Copy boot files
      synchronize:
        src: "{{ item.path }}"
        dest: /root
      delegate_to: "{{ inventory_hostname }}"
      loop: "{{ move_files.files }}"
      register: moved_boots

    - name: Delete boot files
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ move_files.files}}"

    - name: Update grub
      command: update-grub2

    - name: Comment DNS setting in resolved.conf
      replace:
        path: /etc/systemd/resolved.conf
        regexp: "#?DNS=.*"
        replace: "#DNS="

    - name: Comment FallbackDNS setting in resolved.conf
      replace:
        path: /etc/systemd/resolved.conf
        regexp: "#?FallbackDNS=.*"
        replace: "#FallbackDNS="

    - name: Copy over interfaces file
      synchronize:
        src: "../templates/interfaces"
        dest: /etc/network/interfaces

    - name: Delete netplan files
      file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ netplan_files.files}}"

    - name: Tune GCP network start
      replace:
        path: /etc/default/networking
        regexp: ".*CONFIGURE_INTERFACES=.*"
        replace: "CONFIGURE_INTERFACES=no"

    - name: Cleanup root and opt files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - /root/.Xauthority
        - /root/.ssh
        - /root/.bash_history
        - /opt/ovf/ovf_vars
        - /opt/ovf/ovf.xml
        - /root/.bash_history
        - /root/.cache

    - name: Create /var/log/wtmp file
      file:
        path: /var/log/wtmp
        state: touch
        modification_time: preserve
        access_time: preserve
        owner: root
        group: utmp
        mode: 0664

    - name: Run apt-get clean
      apt:
        clean: true

    - name: Change admin GUI password
      community.mysql.mysql_query:
        login_db: eve_ng_db
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        query: UPDATE users SET password = %(password)s WHERE username = 'admin';
        named_args:
          password: "{{ eve_password }}"

    - name: Set MySQL TZ to UTC
      community.mysql.mysql_query:
        login_db: eve_ng_db
        login_user: "{{ mysql_user }}"
        login_password: "{{ mysql_password }}"
        query: SET GLOBAL time_zone = '+00:00';

    - name: Disable initial configuration wizard
      file:
        path: /opt/ovf/.configured
        state: touch
        modification_time: preserve
        access_time: preserve

    - name: Reboot eve-ng
      reboot:
